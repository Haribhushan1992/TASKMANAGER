{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajeswari\\\\Documents\\\\GitHub\\\\TASKMANAGER\\\\task\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport TaskForm from \"./components/TaskForm\";\nimport TaskList from \"./components/TaskList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const handleAddTask = newTask => {\n    setTasks(prevTasks => [...prevTasks, newTask]);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Task Management App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n          onAddTask: handleAddTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n          tasks: tasks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+34uIVDBalDkucWnJ7Aj1Xxb0MA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","TaskForm","TaskList","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","handleAddTask","newTask","prevTasks","children","fileName","_jsxFileName","lineNumber","columnNumber","path","exact","onAddTask","_c","$RefreshReg$"],"sources":["C:/Users/Rajeswari/Documents/GitHub/TASKMANAGER/task/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport TaskForm from \"./components/TaskForm\";\nimport TaskList from \"./components/TaskList\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n\n  const handleAddTask = (newTask) => {\n    setTasks((prevTasks) => [...prevTasks, newTask]);\n  };\n\n  return (\n    <Router>\n      <div>\n        <h1>Task Management App</h1>\n        <Route path=\"/\" exact>\n          <TaskForm onAddTask={handleAddTask} />\n          <TaskList tasks={tasks} />\n        </Route>\n        {/* Add routes for detailed task view, columns, and other features */}\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AACjE,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMY,aAAa,GAAIC,OAAO,IAAK;IACjCF,QAAQ,CAAEG,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAED,OAAO,CAAC,CAAC;EAClD,CAAC;EAED,oBACEN,OAAA,CAACL,MAAM;IAAAa,QAAA,eACLR,OAAA;MAAAQ,QAAA,gBACER,OAAA;QAAAQ,QAAA,EAAI;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5BZ,OAAA,CAACJ,KAAK;QAACiB,IAAI,EAAC,GAAG;QAACC,KAAK;QAAAN,QAAA,gBACnBR,OAAA,CAACH,QAAQ;UAACkB,SAAS,EAAEV;QAAc;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACtCZ,OAAA,CAACF,QAAQ;UAACK,KAAK,EAAEA;QAAM;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb;AAACV,EAAA,CAnBQD,GAAG;AAAAe,EAAA,GAAHf,GAAG;AAqBZ,eAAeA,GAAG;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}